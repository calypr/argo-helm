namespaces:
  argo: argo-workflows
  argocd: argocd
  tenant: wf-poc
  security: security

# Argo Workflows dependency values
argo-workflows:
  server:
    enabled: true
    secure: false
    extraArgs:
      - --auth-mode=server
  controller:
    workflowNamespaces:
      - wf-poc
    # Ensure controller uses correct namespace
    namespaceInstallMode: true
  # Force namespace for all Argo Workflows components
  namespaceOverride: argo-workflows

# Argo CD dependency values
argocd:
  enabled: false
  # Force namespace for ArgoCD
  namespaceOverride: argocd
  global:
    domain: ""

# Our adapter settings
authzAdapter:
  image: ghcr.io/calypr/argo-helm:latest
  fenceBase: "https://calypr-dev.ohsu.edu/user"
  replicas: 2
  # Ensure adapter uses security namespace
  namespace: security

# On-prem S3 artifacts for Argo Workflows
s3:
  enabled: false
  hostname: ""
  bucket: ""
  region: "us-west-2"
  insecure: false
  pathStyle: true
  accessKey: ""
  secretKey: ""

# Ingresses we ship (toggle/hosts)
ingress:
  argoWorkflows:
    enabled: true
    host: "argo.localtest.me"
    tls:
      enabled: false
      secretName: ""
  argocd:
    enabled: true
    host: "argocd.localtest.me"
    tls:
      enabled: false
      secretName: ""

# NGINX auth to the adapter
ingressAuth:
  enabled: true
  authURL: "http://authz-adapter.security.svc.cluster.local:8080/check"
  passAuthorization: true

# Optional: Argo CD Application pointing to nextflow repo
argocdApplication:
  enabled: true
  name: nextflow-hello
  project: default
  repoURL: "https://github.com/bwalsh/nextflow-hello-project.git"
  targetRevision: "main"
  path: "."
  # IMPORTANT: do not template here. Either leave empty or set a literal default.
  destinationNamespace: ""   # leave empty and let the template default to .Values.namespaces.tenant
